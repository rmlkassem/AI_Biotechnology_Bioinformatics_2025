#organizing the project by creating a folder for each:
#data, scripts, and results.
dir.create("data")
dir.create("script")
dir.create("result")
data_set = read.csv(file.choose())
data_set
view(data_set)
veiw(data_set)
View(data_set)
str(data_set)
data_set$id = 1:nrow(data_set)
View(data_set)
data_set = data_set[,-which(names(data_set)="id")]
data_set[,-which(names(data_set)="id")]
data_set[,-which(names(data_set)=="id")]
data_set$smoking
data_set$Smoking = as.factor(data_set$smoker)
str(data_set)
data_set = data_set[,-which(names(data_set)=="id")]
str(data_set)
data_set = data_set[,-which(names(data_set)=="Smoking")]
str(data_set)
data_set$Smoking = ifelse(data_set$smoker=="Yes",1,0)
str(data_set)
View(data_set)
class(data_set$Smoking)
data_set = data_set[,-which(names(data_set)=="smoker")]
View(data_set)
data_set$genders = ifelse(data_set$gender=="Female",1,0)
View(data_set)
data_set = data_set[,-which(names(data_set)=="gender")]
data_set$gender = ifelse(data_set$genders=="Female",1,0)
data_set = data_set[,-which(names(data_set)=="genders")]
data_set$Diagnosis = ifelse(data_set$diagnosis=="Cancer",1,0)
data_set$gender <- c(
"Male", "Female", "Female", "Male", "Female",
"Male", "Female", "Female", "Male", "Female",
"Male", "Female", "Female", "Male", "Female",
"Male", "Female", "Male", "Female", "Male"
)
data_set$gender_type = ifelse(data_set$gender=="Female",1,0)
data_set$gender = NULL
data_set$diagnosis = NULL
str(data_set)
#What I did till now?
# I convert the essential columns that have two options like:
# gender, diagnosis, and smoker
# from categorical values to numeric using ifelse() function.
# I try several ways, I make mistakes but I learn.
data_set = read.csv(file.choose())
View(data_set)
data_set$Diagnosis = ifelse(data_set$diagnosis=="Cancer",1,0)
View(data_set)
# Convert the essential columns that have two options like:
# gender, diagnosis, and smoker
# from categorical values to numeric using ifelse() function.
data_set$Gender_Type = ifelse(data_set$gender=="Female",1,0)
data_set$Diagnosis = ifelse(data_set$diagnosis=="Cancer",1,0)
data_set$Smoking = ifelse(data_set$smoker=="Yes",1,0)
View(data_set)
data_set$gender = NULL
data_set$diagnosis = NULL
data_set$smoker = NULL
View(data_set)
write.csv(data_set,file = "result/patient_data.csv")
save.image(file = "full_assignment.RData")
# Convert the essential columns that have two options like:gender, diagnosis,
# and smoker from categorical values to numeric using ifelse() function.
data_set$Gender = ifelse(data_set$gender=="Female",1,0)
View(data_set)
# Convert the essential columns that have two options like:gender, diagnosis,
# and smoker from categorical values to numeric using ifelse() function.
data_set$Gender_Type = ifelse(data_set$gender=="Female",1,0)
View(data_set)
data_set$Gender_category = as.factor(data_set$Gender_Type)
data_set$Diagnosis_status = as.factor(data_set$Diagnosis)
data_set$Smoking_status = as.factor(data_set$Smoking)
View(data_set)
write.csv(data_set,file = "result/patient_info_clean.csv")
load("C:/Users/LENOVO/Desktop/AI_Omics_Internship_2025/full_assignment.RData")
load("C:/Users/LENOVO/Desktop/AI_Omics_Internship_2025/full_assignment.RData")
load("C:/Users/LENOVO/Desktop/AI_Omics_Internship_2025/full_assignment.RData")
# Lets choose the .csv file and read it
data_set = read.csv(file.choose())
View(data_set)
# Convert the essential columns that have two options like:gender, diagnosis,
# and smoker from categorical values to numeric using ifelse() function.
# Then, cahnge them to factors since they have there own fixed categories
data_set$Gender_Type = ifelse(data_set$gender=="Female",1,0)
data_set$Gender_category = as.factor(data_set$Gender_Type)
data_set$Diagnosis = ifelse(data_set$diagnosis=="Cancer",1,0)
data_set$Diagnosis_status = as.factor(data_set$Diagnosis)
data_set$Smoking = ifelse(data_set$smoker=="Yes",1,0)
data_set$Smoking_status = as.factor(data_set$Smoking)
# Deleting the first columns
data_set$gender = NULL
data_set$diagnosis = NULL
data_set$smoker = NULL
View(data_set)
write.csv(data_set,file = "result/patient_info_clean.csv")
save.image(file = "KassemRammal_Class_Ib.RData")
